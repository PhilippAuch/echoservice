kind: Namespace
apiVersion: v1
metadata:
  name: echoservice
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: echoservice
  namespace: echoservice
  labels:
    app: echoservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echoservice
  template:
    metadata:
      labels:
        app: echoservice
    spec:
      containers:
        - name: echoservice
          image: ghcr.io/philipp-auch-de/echoservice:action-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
---
kind: Service
apiVersion: v1
metadata:
  name: echoservice
  namespace: echoservice
  labels:
    app: echoservice
    app.kubernetes.io/component: echoservice
    app.kubernetes.io/name: echoservice
    app.kubernetes.io/part-of: echoservice
    prometheus: k8s
spec:
  ports:
    - name: web
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: echoservice
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: echoservice
  namespace: echoservice
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - echoservice.philipp-auch.de
      secretName: echoservice-tls-secret
  rules:
    - host: echoservice.philipp-auch.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echoservice
                port:
                  number: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: echoservice-servicemonitor
  namespace: echoservice
spec:
  endpoints:
    - interval: 30s
      port: web
  selector:
    matchLabels:
      app: echoservice
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-k8s
  namespace: echoservice
rules:
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - ''
    resources:
      - services
      - endpoints
      - pods
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: prometheus-k8s
  namespace: echoservice
subjects:
  - kind: ServiceAccount
    name: prometheus-k8s
    namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s
